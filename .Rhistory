install.packages("slidify")
install.packages(c("ggplot2", "devtools"))
install.packages("slidify")
install_github('slidify', 'ramnathv')
library("devtools")
install_github('slidify', 'ramnathv')
find.packages("devtools")
find.package("devtools")
find_rtools()
install.packages("kernsmooth")
install.packages("KernSmooth")
about("KernSmooth")
help KernSmooth
search()
library
readme
library(KernSmooth)
library("knitr", lib.loc="~/R/win-library/3.1")
exit
dataset(iris)
library(datasets)
dataset(iris)
data(iris)
irir
iris
colnames(iris)
mean(iris$Sepal.Length[iris$Species==virginica,]
)
iris[Species]
iris[Species,]
iris[,Species]
iris$Species
iris$Species[150]
?split
split(iris, 50)
split(iris, iris$Species)
split(iris, 50)
split(iris, iris$Species)
str(tapply)
levels(iris)
levels(iris$Species)
levels<-levels(iris$Species)
tapply(iris, levels(iris$Species), mean)
tapply(iris, iris$Species, mean)
tapply(iris)
tapply(iris,iris$Species)
levels(iris$Species)
levels(c(1x50, 2x50, 3*50)
levels(c(1*50, 2x50, 3*50)
levels(c(1*50, 2x50, 3*50))
c(1*50, 2x50, 3*50)
c(1*50, 2*50, 3*50)
?rpt
?rpt
?repeat
levels<-repeat(1:5,each=50)
x<-repeat(1:5,each=50)
x <- repeat(1:5,each=50)
x <- rep(1:3,each=50)
x
tapply(iris, x, mean)
length(iris)
length(x)
iris
tapply(iris$sepal.Length, x, mean)
tapply(iris$Sepal.Length, x, mean)
colmeans(iris)
colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
?apply
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean, iris$Species==virginica)
apply(iris[, 1:4], 2, mean, iris$Species="virginica")
apply(iris[, 1:4], 2, mean, iris$Species="virginica")
apply(iris[, 1:4], 2, mean, iris$Species=virginica)
data(mtcars)
mtcars
mean(mtcars$mpg, mtcars$cyl)
?mean
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(iris@Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
lapply(mtcars, mean)
sapply(mtcars, mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$hp, mtcars$cyl, mean)
x<-tapply(mtcars$hp, mtcars$cyl, mean)
x
x[3]-x[1]
debug(ls)
ls
ls
mean
ls()
3
where
q()
q()
q()
q()
q()
#
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
getwd
getwd()
setwd(D:\Coursera Work\ProgrammingAssignment3)
setwd(D:/Coursera Work/ProgrammingAssignment3)
setwd("D:/Coursera Work/ProgrammingAssignment3")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
str(outcome)
summary(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
names(outcome)
hist(outcome[, 11])
?names
outcomes <- c('heart attack'=11, 'heart failure'=17, 'pneumonia'=23)
outcomes
outcomes[heart failure]
outcomes['heart failure']
outcomes$'heart failure'
outcomes['heart failure']=17
outcomes['heart failure']=23
outcomes['heart failure']
outcomes['heart failure']>50
summary(outcome[,outcomes['heart failure']])
summary(outcome[,23])
str(outcome[,outcomes['heart failure']])
outcomes['heart failure']=17
str(outcome[,outcomes['heart failure']])
str(outcome[,17])
cheese='heart failure'
str(outcome[,outcomes[cheese]])
cheese='heart failu'
str(outcome[,outcomes[cheese]])
names(outcomes)
cheese='heart failure'
cheese %in% names(outcomes)
cheese='heart failu'
cheese %in% names(outcomes)
!(cheese %in% names(outcomes))
cheese='heart failure'
!(cheese %in% names(outcomes))
source(best)
source(best.r)
source("best.r")
source("best.r")
source("best.r")
source("best.r")
best(TX,'heart failure')
best('TX','heart failure')
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
best("NY","heart failure")
best(TX,"heart failure")
best(TX,"heart failure")
source("best.r")
best(TX,"heart failure")
best("NY","heart failure")
"TX" %in% outcomes[,7]
"TX" %in% outcome[,7]
source("best.r")
best("NY","heart failure")
source("best.r")
source("best.r")
best("NY","heart failure")
best("NY","heart failur")
best("Nx","heart failure")
split(outcome,outcome[,7])
split(outcome,outcome[,7]="TX")
split(outcome,outcome[,7]=='TX'
)
Spl<-split(outcome,outcome[,7]=='TX')
summary(spl)
summary(Spl)
str(Spl)
tapply(mtcars[,7], mtcars[,11], mean)
tapply(outcome[,7], outcome[,11], mean)
tapply(outcome[,11], outcome[,7], mean)
tapply(outcome[,11], outcome[,7], mean, na.rm-TRUE)
tapply(outcome[,11], outcome[,7], mean, na.rm=TRUE)
tapply(outcome[,11], outcome[,7], min, na.rm=TRUE)
?min
subset(outcome,outcome[,7]=="TX")
tex<--subset(outcome,outcome[,7]=="TX")
tex<-subset(outcome,outcome[,7]=="TX")
min(tex[,11])
min(tex[,11],na.rm=TRUE)
names(outcome)
outcome[11,2]
?which
which.min(outcome[,11])
source("best.r")
best("TX","heart failure")
 best("TX", "heart attack")
source("best.r")
 best("TX", "heart attack")
source("best.r")
 best("TX", "heart attack")
 best("TXe", "heart attack")
source("best.r")
 best("TXe", "heart attack")
 best("TX", "heart attack")
source("best.r")
source("best.r")
 best("TX", "heart attack")
 best("TXe", "heart attack")
best("TX","heart failure")
source("best.r")
source("best.r")
source("best.r")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
which.min.simple(outcome[,11])
source("best.r")
source("best.r")
best("TX","heart failure")
 best("TX", "heart attack")
best("TX","heart failure")
?which
 best("MD", "heart attack")
 best("MD", "pneumonia")
names(outcome)
source("best.r")
 best("MD", "pneumonia")
 best("MD", "heart attack")
best("TX","heart failure")
source("best.r")
debug(best)
best("TX","heart failure")
best("TX","heart failure")
print(StateValues)
?debug
undebig(best)
undebug(best)
best("TX","heart failure")
?min
 best("MD", "heart attack")
best("TX","heart attack")
 best("MD", "pneumonia")
source("best.r")
 best("MD", "pneumonia")
source("best.r")
 best("MD", "pneumonia")
best("TX","heart attack")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
best("TX","heart attack")
StateValues <- subset(outcome, oucome[,7]=="TX" )
StateValues <- subset(outcome, outcome[,7]=="TX" )
subset(outcome, outcome[,7]=="TX" )
StateValues <- subset(outcome, outcome[,7]=="TX" )
StateValues[,2]
best("TX","heart attack")
best("TX","heart failure")
which (StateValues[,2]=="FORT DUNCAN MEDICAL CENTER")
min(StateValues[17])
min(StateValues[,17],na.rm=TRUE)
StateValues[42,17]
source("best.r")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
best("TX","heart attack")
source("best.r")
best("TX","heart failure")
source("best.r")
source("best.r")
source("best.r")
best("TX","heart failure")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
?suppresWarnings
?suppressWarnings
source("best.r")
?suppressWarnings
best("TX","heart failure")
best("TX","heart attack")
 best("MD", "pneumonia")
 best("MD", "heart attack")
 best("MD", "heart failure")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
?order
names(outcome)
OutcomeScores <- suppressWarnings(as.numeric(data[,outcomes[outcome]][st
as.numeric(data[,11][state=="TX"]
)
?nrow
source("best.r")
source("best.r")
source("best.r")
best("TX","heart attack")
source("best.r")
source("best.r")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
?order
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
best("TX","heart attackr")
best("T3X","heart attack")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
source("best.r")
best("TX","heart attack")
source("best.r")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
source("best.r")
best("TX","heart attack")
best("TX","heart attack")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
source("best.r")
best("TX","heart failure")
best("TX","heart attack")
source("rankhospitals.r")
source("rankhospital#.r")
source("rankhospital.r")
source("rankhospital.r")
rankhospital("TX", "heart attack")
rankhospital("TX", "heart attack","worst")
rankhospital("TX", "heart attack",20000)
rankhospital("TX", "heart failure",5)
rankhospital("TX", "heart failure",4)
source("rankhospital.r")
rankhospital("TX", "heart failure",4)
rankhospital("TX", "heart attack",20000)
rankhospital("TX", "heart attack","worst")
summary(outcomes$state)
summary(outcome$state)
str(outcome$state)
summary(outcome$state)
head(outcome$state)
head(outcome)
hist(outcome$state)
?table
table(outcome$state)
?rank
?rank
split(outcome, outcome$state)
split(outcome, outcome[,7])
cheese<-plit(outcome, outcome[,7])
cheese<-split(outcome, outcome[,7])
cheese$TX
head(cheese$TX)
Nrow(cheese$TX)
nrow(cheese$TX)
source("rankhospital.r")
source("rankall.r")
rankall("heart attack")
source("rankall.r")
rankall("heart attack")
source("rankall.r")
rankall("heart attack")
?count
?aggregate
source("rankall.r")
rankall("heart attack",1)
head(rankall("heart attack", 20), 10)
rankall("heart attack",1)[,2]
levels(outcome[,7])
levels(rankall("heart attack",1)[,2])
source("rankall.r")
rankall("heart attack",1)[,2]
rankall("heart attack",1)
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",1)
source("rankall.r")
source("rankall.r")
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
source("rankall.r")
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
source("rankall.r")
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
source("rankall.r")
rankall("heart attack",3)
rankall("heart attack",1)
source("rankall.r")
rankall("heart attack",1)
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
source("rankall.r")
rankall("heart attack",5)
rankall("heart attack",2000)
rankall("heart attack","worse")
rankall("heart attack","worst")
names(outcome)
rankall("heart attack","best")
rankall("heart attack",4)
source("rankall.r")
rankall("heart attack",4)
source("rankall.r")
rankall("heart attack",4)
source("rankall.r")
rankall("heart attack","best")
source("rankall.r")
tail(rankall("pneumonia", "worst"), 3)
source("rprog-scripts-submitscript3.r")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
q()
